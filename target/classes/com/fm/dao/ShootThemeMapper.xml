<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fm.dao.ShootThemeDao">
  <resultMap id="BaseResultMap" type="com.fm.entity.ShootTheme">
    <id column="theme_id" jdbcType="INTEGER" property="themeId" />
    <result column="theme_name" jdbcType="VARCHAR" property="themeName" />
    <result column="theme_status" jdbcType="INTEGER" property="themeStatus" />
    <result column="blank_1" jdbcType="VARCHAR" property="blank1" />
    <result column="blank_2" jdbcType="VARCHAR" property="blank2" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fm.entity.ShootTheme">
    <result column="theme_desc" jdbcType="LONGVARCHAR" property="themeDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    theme_id, theme_name, theme_status, blank_1, blank_2
  </sql>
  <sql id="Blob_Column_List">
    theme_desc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fm.entity.ShootThemeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shoot_theme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fm.entity.ShootThemeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shoot_theme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shoot_theme
    where theme_id = #{themeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shoot_theme
    where theme_id = #{themeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fm.entity.ShootThemeExample">
    delete from shoot_theme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fm.entity.ShootTheme">
    insert into shoot_theme (theme_id, theme_name, theme_status, 
      blank_1, blank_2, theme_desc
      )
    values (#{themeId,jdbcType=INTEGER}, #{themeName,jdbcType=VARCHAR}, #{themeStatus,jdbcType=INTEGER}, 
      #{blank1,jdbcType=VARCHAR}, #{blank2,jdbcType=VARCHAR}, #{themeDesc,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fm.entity.ShootTheme">
    insert into shoot_theme
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="themeId != null">
        theme_id,
      </if>
      <if test="themeName != null">
        theme_name,
      </if>
      <if test="themeStatus != null">
        theme_status,
      </if>
      <if test="blank1 != null">
        blank_1,
      </if>
      <if test="blank2 != null">
        blank_2,
      </if>
      <if test="themeDesc != null">
        theme_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="themeId != null">
        #{themeId,jdbcType=INTEGER},
      </if>
      <if test="themeName != null">
        #{themeName,jdbcType=VARCHAR},
      </if>
      <if test="themeStatus != null">
        #{themeStatus,jdbcType=INTEGER},
      </if>
      <if test="blank1 != null">
        #{blank1,jdbcType=VARCHAR},
      </if>
      <if test="blank2 != null">
        #{blank2,jdbcType=VARCHAR},
      </if>
      <if test="themeDesc != null">
        #{themeDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fm.entity.ShootThemeExample" resultType="java.lang.Long">
    select count(*) from shoot_theme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shoot_theme
    <set>
      <if test="record.themeId != null">
        theme_id = #{record.themeId,jdbcType=INTEGER},
      </if>
      <if test="record.themeName != null">
        theme_name = #{record.themeName,jdbcType=VARCHAR},
      </if>
      <if test="record.themeStatus != null">
        theme_status = #{record.themeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.blank1 != null">
        blank_1 = #{record.blank1,jdbcType=VARCHAR},
      </if>
      <if test="record.blank2 != null">
        blank_2 = #{record.blank2,jdbcType=VARCHAR},
      </if>
      <if test="record.themeDesc != null">
        theme_desc = #{record.themeDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update shoot_theme
    set theme_id = #{record.themeId,jdbcType=INTEGER},
      theme_name = #{record.themeName,jdbcType=VARCHAR},
      theme_status = #{record.themeStatus,jdbcType=INTEGER},
      blank_1 = #{record.blank1,jdbcType=VARCHAR},
      blank_2 = #{record.blank2,jdbcType=VARCHAR},
      theme_desc = #{record.themeDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shoot_theme
    set theme_id = #{record.themeId,jdbcType=INTEGER},
      theme_name = #{record.themeName,jdbcType=VARCHAR},
      theme_status = #{record.themeStatus,jdbcType=INTEGER},
      blank_1 = #{record.blank1,jdbcType=VARCHAR},
      blank_2 = #{record.blank2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fm.entity.ShootTheme">
    update shoot_theme
    <set>
      <if test="themeName != null">
        theme_name = #{themeName,jdbcType=VARCHAR},
      </if>
      <if test="themeStatus != null">
        theme_status = #{themeStatus,jdbcType=INTEGER},
      </if>
      <if test="blank1 != null">
        blank_1 = #{blank1,jdbcType=VARCHAR},
      </if>
      <if test="blank2 != null">
        blank_2 = #{blank2,jdbcType=VARCHAR},
      </if>
      <if test="themeDesc != null">
        theme_desc = #{themeDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where theme_id = #{themeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fm.entity.ShootTheme">
    update shoot_theme
    set theme_name = #{themeName,jdbcType=VARCHAR},
      theme_status = #{themeStatus,jdbcType=INTEGER},
      blank_1 = #{blank1,jdbcType=VARCHAR},
      blank_2 = #{blank2,jdbcType=VARCHAR},
      theme_desc = #{themeDesc,jdbcType=LONGVARCHAR}
    where theme_id = #{themeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fm.entity.ShootTheme">
    update shoot_theme
    set theme_name = #{themeName,jdbcType=VARCHAR},
      theme_status = #{themeStatus,jdbcType=INTEGER},
      blank_1 = #{blank1,jdbcType=VARCHAR},
      blank_2 = #{blank2,jdbcType=VARCHAR}
    where theme_id = #{themeId,jdbcType=INTEGER}
  </update>
</mapper>