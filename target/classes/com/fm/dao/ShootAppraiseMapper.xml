<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fm.dao.ShootAppraiseDao">
  <resultMap id="BaseResultMap" type="com.fm.entity.ShootAppraise">
    <id column="appraise_id" jdbcType="INTEGER" property="appraiseId" />
    <result column="cust_id" jdbcType="INTEGER" property="custId" />
    <result column="cust_answer_id" jdbcType="INTEGER" property="custAnswerId" />
    <result column="shoot_id" jdbcType="INTEGER" property="shootId" />
    <result column="appraise_create_time" jdbcType="TIMESTAMP" property="appraiseCreateTime" />
    <result column="appraise_range" jdbcType="INTEGER" property="appraiseRange" />
    <result column="appraise_status" jdbcType="INTEGER" property="appraiseStatus" />
    <result column="blank_1" jdbcType="VARCHAR" property="blank1" />
    <result column="blank_2" jdbcType="VARCHAR" property="blank2" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fm.entity.ShootAppraise">
    <result column="appraise_content" jdbcType="LONGVARCHAR" property="appraiseContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    appraise_id, cust_id, cust_answer_id, shoot_id, appraise_create_time, appraise_range, 
    appraise_status, blank_1, blank_2
  </sql>
  <sql id="Blob_Column_List">
    appraise_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fm.entity.ShootAppraiseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shoot_appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fm.entity.ShootAppraiseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shoot_appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shoot_appraise
    where appraise_id = #{appraiseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shoot_appraise
    where appraise_id = #{appraiseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fm.entity.ShootAppraiseExample">
    delete from shoot_appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fm.entity.ShootAppraise">
    insert into shoot_appraise (appraise_id, cust_id, cust_answer_id, 
      shoot_id, appraise_create_time, appraise_range, 
      appraise_status, blank_1, blank_2, 
      appraise_content)
    values (#{appraiseId,jdbcType=INTEGER}, #{custId,jdbcType=INTEGER}, #{custAnswerId,jdbcType=INTEGER}, 
      #{shootId,jdbcType=INTEGER}, #{appraiseCreateTime,jdbcType=TIMESTAMP}, #{appraiseRange,jdbcType=INTEGER}, 
      #{appraiseStatus,jdbcType=INTEGER}, #{blank1,jdbcType=VARCHAR}, #{blank2,jdbcType=VARCHAR}, 
      #{appraiseContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fm.entity.ShootAppraise">
    insert into shoot_appraise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appraiseId != null">
        appraise_id,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="custAnswerId != null">
        cust_answer_id,
      </if>
      <if test="shootId != null">
        shoot_id,
      </if>
      <if test="appraiseCreateTime != null">
        appraise_create_time,
      </if>
      <if test="appraiseRange != null">
        appraise_range,
      </if>
      <if test="appraiseStatus != null">
        appraise_status,
      </if>
      <if test="blank1 != null">
        blank_1,
      </if>
      <if test="blank2 != null">
        blank_2,
      </if>
      <if test="appraiseContent != null">
        appraise_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appraiseId != null">
        #{appraiseId,jdbcType=INTEGER},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="custAnswerId != null">
        #{custAnswerId,jdbcType=INTEGER},
      </if>
      <if test="shootId != null">
        #{shootId,jdbcType=INTEGER},
      </if>
      <if test="appraiseCreateTime != null">
        #{appraiseCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appraiseRange != null">
        #{appraiseRange,jdbcType=INTEGER},
      </if>
      <if test="appraiseStatus != null">
        #{appraiseStatus,jdbcType=INTEGER},
      </if>
      <if test="blank1 != null">
        #{blank1,jdbcType=VARCHAR},
      </if>
      <if test="blank2 != null">
        #{blank2,jdbcType=VARCHAR},
      </if>
      <if test="appraiseContent != null">
        #{appraiseContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fm.entity.ShootAppraiseExample" resultType="java.lang.Long">
    select count(*) from shoot_appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shoot_appraise
    <set>
      <if test="record.appraiseId != null">
        appraise_id = #{record.appraiseId,jdbcType=INTEGER},
      </if>
      <if test="record.custId != null">
        cust_id = #{record.custId,jdbcType=INTEGER},
      </if>
      <if test="record.custAnswerId != null">
        cust_answer_id = #{record.custAnswerId,jdbcType=INTEGER},
      </if>
      <if test="record.shootId != null">
        shoot_id = #{record.shootId,jdbcType=INTEGER},
      </if>
      <if test="record.appraiseCreateTime != null">
        appraise_create_time = #{record.appraiseCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.appraiseRange != null">
        appraise_range = #{record.appraiseRange,jdbcType=INTEGER},
      </if>
      <if test="record.appraiseStatus != null">
        appraise_status = #{record.appraiseStatus,jdbcType=INTEGER},
      </if>
      <if test="record.blank1 != null">
        blank_1 = #{record.blank1,jdbcType=VARCHAR},
      </if>
      <if test="record.blank2 != null">
        blank_2 = #{record.blank2,jdbcType=VARCHAR},
      </if>
      <if test="record.appraiseContent != null">
        appraise_content = #{record.appraiseContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update shoot_appraise
    set appraise_id = #{record.appraiseId,jdbcType=INTEGER},
      cust_id = #{record.custId,jdbcType=INTEGER},
      cust_answer_id = #{record.custAnswerId,jdbcType=INTEGER},
      shoot_id = #{record.shootId,jdbcType=INTEGER},
      appraise_create_time = #{record.appraiseCreateTime,jdbcType=TIMESTAMP},
      appraise_range = #{record.appraiseRange,jdbcType=INTEGER},
      appraise_status = #{record.appraiseStatus,jdbcType=INTEGER},
      blank_1 = #{record.blank1,jdbcType=VARCHAR},
      blank_2 = #{record.blank2,jdbcType=VARCHAR},
      appraise_content = #{record.appraiseContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shoot_appraise
    set appraise_id = #{record.appraiseId,jdbcType=INTEGER},
      cust_id = #{record.custId,jdbcType=INTEGER},
      cust_answer_id = #{record.custAnswerId,jdbcType=INTEGER},
      shoot_id = #{record.shootId,jdbcType=INTEGER},
      appraise_create_time = #{record.appraiseCreateTime,jdbcType=TIMESTAMP},
      appraise_range = #{record.appraiseRange,jdbcType=INTEGER},
      appraise_status = #{record.appraiseStatus,jdbcType=INTEGER},
      blank_1 = #{record.blank1,jdbcType=VARCHAR},
      blank_2 = #{record.blank2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fm.entity.ShootAppraise">
    update shoot_appraise
    <set>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="custAnswerId != null">
        cust_answer_id = #{custAnswerId,jdbcType=INTEGER},
      </if>
      <if test="shootId != null">
        shoot_id = #{shootId,jdbcType=INTEGER},
      </if>
      <if test="appraiseCreateTime != null">
        appraise_create_time = #{appraiseCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appraiseRange != null">
        appraise_range = #{appraiseRange,jdbcType=INTEGER},
      </if>
      <if test="appraiseStatus != null">
        appraise_status = #{appraiseStatus,jdbcType=INTEGER},
      </if>
      <if test="blank1 != null">
        blank_1 = #{blank1,jdbcType=VARCHAR},
      </if>
      <if test="blank2 != null">
        blank_2 = #{blank2,jdbcType=VARCHAR},
      </if>
      <if test="appraiseContent != null">
        appraise_content = #{appraiseContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where appraise_id = #{appraiseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fm.entity.ShootAppraise">
    update shoot_appraise
    set cust_id = #{custId,jdbcType=INTEGER},
      cust_answer_id = #{custAnswerId,jdbcType=INTEGER},
      shoot_id = #{shootId,jdbcType=INTEGER},
      appraise_create_time = #{appraiseCreateTime,jdbcType=TIMESTAMP},
      appraise_range = #{appraiseRange,jdbcType=INTEGER},
      appraise_status = #{appraiseStatus,jdbcType=INTEGER},
      blank_1 = #{blank1,jdbcType=VARCHAR},
      blank_2 = #{blank2,jdbcType=VARCHAR},
      appraise_content = #{appraiseContent,jdbcType=LONGVARCHAR}
    where appraise_id = #{appraiseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fm.entity.ShootAppraise">
    update shoot_appraise
    set cust_id = #{custId,jdbcType=INTEGER},
      cust_answer_id = #{custAnswerId,jdbcType=INTEGER},
      shoot_id = #{shootId,jdbcType=INTEGER},
      appraise_create_time = #{appraiseCreateTime,jdbcType=TIMESTAMP},
      appraise_range = #{appraiseRange,jdbcType=INTEGER},
      appraise_status = #{appraiseStatus,jdbcType=INTEGER},
      blank_1 = #{blank1,jdbcType=VARCHAR},
      blank_2 = #{blank2,jdbcType=VARCHAR}
    where appraise_id = #{appraiseId,jdbcType=INTEGER}
  </update>

  <select id="getCount" parameterType="com.fm.entity.ShootAppraise" resultType="java.lang.Integer">
      select count(appraise_id)
      from shoot_appraise
      where shoot_id = #{shootId}
  </select>

  <select id="selectById" parameterType="com.fm.entity.ShootAppraise" resultMap="BaseResultMap">
    select *
    from shoot_appraise
    where shoot_id = #{shootId}
  </select>

  <select id="selectByPage" parameterType="map" resultMap="BaseResultMap">
      select *
      from shoot_appraise
      where shoot_id = #{shootId}
      order by appraise_create_time desc
      limit #{page.startRecord},#{page.pageSize}
  </select>

</mapper>